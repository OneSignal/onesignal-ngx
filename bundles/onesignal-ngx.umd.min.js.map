{"version":3,"sources":["../../../projects/onesignal-ngx/src/lib/onesignal-ngx.service.ts","../../../projects/onesignal-ngx/src/lib/onesignal-ngx.component.ts","../../../projects/onesignal-ngx/src/lib/onesignal-ngx.module.ts"],"names":["oneSignalLogin","externalId","jwtToken","Promise","resolve","reject","isOneSignalScriptFailed","_a","window","OneSignalDeferred","push","oneSignal","login","then","value","catch","error","oneSignalLogout","logout","oneSignalSetConsentGiven","consent","setConsentGiven","oneSignalSetConsentRequired","requiresConsent","setConsentRequired","UserNamespace","addAlias","label","id","User","addAliases","aliases","removeAlias","removeAliases","labels","addEmail","email","removeEmail","addSms","smsNumber","removeSms","PushSubscription","_b","_c","OneSignal","token","optedIn","optIn","optOut","addEventListener","event","listener","removeEventListener","SessionNamespace","sendOutcome","outcomeName","outcomeWeight","Session","sendUniqueOutcome","DebugNamespace","setLogLevel","logLevel","Debug","SlidedownNamespace","promptPush","options","Slidedown","promptPushCategories","promptSms","promptEmail","promptSmsAndEmail","NotificationsNamespace","setDefaultUrl","url","Notifications","setDefaultTitle","title","isPushSupported","PushSubscriptionOptions","prototype","hasOwnProperty","safari","pushNotification","top","navigator","vendor","platform","getPermissionStatus","onComplete","requestPermission","script","isOneSignalInitialized","document","createElement","defer","src","onerror","head","appendChild","this","init","appId","Error","Injectable","args","providedIn","OnesignalNgxComponent","ngOnInit","Component","selector","template","NgModule","declarations","imports","exports"],"mappings":"umBA4FA,SAASA,EAAeC,EAAoBC,GAC1C,OAAO,IAAIC,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUC,MAAMX,EAAYC,GACzBW,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,YAKxC,SAASC,IACP,OAAO,IAAId,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUO,SACPL,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,YAKxC,SAASG,EAAyBC,GAChC,OAAO,IAAIjB,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUU,gBAAgBD,GACvBP,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,YAKxC,SAASM,EAA4BC,GACnC,OAAO,IAAIpB,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUa,mBAAmBD,GAC1BV,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,YA6RxC,IAUMS,EAAgC,CACrCC,SAzGD,SAAsBC,EAAeC,SACX,QAAxBrB,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUkB,KAAKH,SAASC,EAAOC,OAwGlCE,WApGD,SAAwBC,SACE,QAAxBxB,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUkB,KAAKC,WAAWC,OAmG7BC,YA/FD,SAAyBL,SACC,QAAxBpB,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUkB,KAAKG,YAAYL,OA8F9BM,cA1FD,SAA2BC,SACD,QAAxB3B,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUkB,KAAKI,cAAcC,OAyFhCC,SArFD,SAAsBC,SACI,QAAxB7B,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUkB,KAAKM,SAASC,OAoF3BC,YAhFD,SAAyBD,SACC,QAAxB7B,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUkB,KAAKQ,YAAYD,OA+E9BE,OA3ED,SAAoBC,SACM,QAAxBhC,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUkB,KAAKS,OAAOC,OA0EzBC,UAtED,SAAuBD,SACG,QAAxBhC,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUkB,KAAKW,UAAUD,OAqE5BE,iBAnB6D,CACzDb,SAAE,IAAArB,EAAAmC,EAAAC,EAAgC,OAA+C,QAA/CA,EAA6B,QAA7BD,EAAuB,QAAvBnC,EAAOC,OAAOoC,iBAAS,IAAArC,OAAA,EAAAA,EAAEsB,YAAI,IAAAa,OAAA,EAAAA,EAAED,wBAAgB,IAAAE,OAAA,EAAAA,EAAEf,IACnFiB,YAAK,IAAAtC,EAAAmC,EAAAC,EAAgC,OAA+C,QAA/CA,EAA6B,QAA7BD,EAAuB,QAAvBnC,EAAOC,OAAOoC,iBAAS,IAAArC,OAAA,EAAAA,EAAEsB,YAAI,IAAAa,OAAA,EAAAA,EAAED,wBAAgB,IAAAE,OAAA,EAAAA,EAAEE,OACtFC,cAAO,IAAAvC,EAAAmC,EAAAC,EAA0B,OAA+C,QAA/CA,EAA6B,QAA7BD,EAAuB,QAAvBnC,EAAOC,OAAOoC,iBAAS,IAAArC,OAAA,EAAAA,EAAEsB,YAAI,IAAAa,OAAA,EAAAA,EAAED,wBAAgB,IAAAE,OAAA,EAAAA,EAAEG,SACtFC,MAlDD,WACE,OAAO,IAAI5C,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUkB,KAAKY,iBAAiBM,QAC7BlC,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,aA0CvCgC,OArCD,WACE,OAAO,IAAI7C,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUkB,KAAKY,iBAAiBO,SAC7BnC,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,aA6BvCiC,iBAxBD,SAA0CC,EAA6BC,SAC7C,QAAxB5C,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUkB,KAAKY,iBAAiBQ,iBAAiBC,EAAOC,OAuB3DC,oBAnBD,SAA6CF,EAA6BC,SAChD,QAAxB5C,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUkB,KAAKY,iBAAiBW,oBAAoBF,EAAOC,SAgCzDE,EAAsC,CAC3CC,YAjJD,SAA4BC,EAAqBC,GAC/C,OAAO,IAAIrD,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAU8C,QAAQH,YAAYC,EAAaC,GACxC3C,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,aAyIvC0C,kBApID,SAAkCH,GAChC,OAAO,IAAIpD,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAU8C,QAAQC,kBAAkBH,GACjC1C,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,cA8HlC2C,EAAkC,CACvCC,YAlCD,SAA0BC,SACA,QAAxBtD,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUmD,MAAMF,YAAYC,QAmC1BE,EAA0C,CAC/CC,WAxTD,SAA6BC,GAC3B,OAAO,IAAI9D,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUuD,UAAUF,WAAWC,GAC5BpD,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,aAgTvCmD,qBA3SD,SAAuCF,GACrC,OAAO,IAAI9D,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUuD,UAAUC,qBAAqBF,GACtCpD,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,aAmSvCoD,UA9RD,SAA4BH,GAC1B,OAAO,IAAI9D,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUuD,UAAUE,UAAUH,GAC3BpD,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,aAsRvCqD,YAjRD,SAA8BJ,GAC5B,OAAO,IAAI9D,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUuD,UAAUG,YAAYJ,GAC7BpD,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,aAyQvCsD,kBApQD,SAAoCL,GAClC,OAAO,IAAI9D,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUuD,UAAUI,kBAAkBL,GACnCpD,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,aA4PvCiC,iBAvPD,SAAmCC,EAA2BC,SACpC,QAAxB5C,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUuD,UAAUjB,iBAAiBC,EAAOC,OAsP/CC,oBAlPD,SAAsCF,EAA2BC,SACvC,QAAxB5C,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUuD,UAAUd,oBAAoBF,EAAOC,QAmP7CoB,EAAkD,CACvDC,cAhPD,SAAoCC,GAClC,OAAO,IAAItE,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAU+D,cAAcF,cAAcC,GACnC5D,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,aAwOvC2D,gBAnOD,SAAsCC,GACpC,OAAO,IAAIzE,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAU+D,cAAcC,gBAAgBC,GACrC/D,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,aA2NvC6D,gBAUD,WACE,MA2C0C,oBAA5BC,yBACRA,wBAAwBC,UAAUC,eAAe,yBAP/CxE,OAAOyE,aAAoD,IAAnCzE,OAAOyE,OAAOC,kBANvC1E,OAAO2E,MAAQ3E,QACD,yBAArB4E,UAAUC,QACa,aAAvBD,UAAUE,UA3CXC,oBAvND,SAA0CC,GACxC,OAAO,IAAIrF,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAU+D,cAAca,oBAAoBC,GACzC3E,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,aA+MvCyE,kBA1MD,WACE,OAAO,IAAItF,SAAQ,SAACC,EAASC,SACvBC,GACFD,IAGsB,QAAxBE,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAU+D,cAAce,oBACrB5E,MAAK,SAACC,GAAe,OAAAV,EAAQU,MAC7BC,OAAM,SAACC,GAAiB,OAAAX,EAAOW,aAkMvCiC,iBAzLD,SAAuCC,EAA8BC,SAC3C,QAAxB5C,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAU+D,cAAczB,iBAAiBC,EAAOC,OAwLnDC,oBAhLD,SAA0CF,EAA8BC,SAC9C,QAAxB5C,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAU+D,cAActB,oBAAoBF,EAAOC,QAyLvD,IAiDQuC,EA7CJC,GAAyB,EAIzBrF,GAA0B,EAE9BE,OAAOC,kBAAoBD,OAAOC,mBAAqB,IAuC/CiF,EAASE,SAASC,cAAc,WAC/BjE,GAlDgB,gBAmDvB8D,EAAOI,OAAQ,EACfJ,EAAOK,IAnDqB,8DAuD5BL,EAAOM,QAAU,WAXjB1F,GAA0B,GAe1BsF,SAASK,KAAKC,YAAYR,oBAwB1B,SAAA9C,IA8BDuD,KAAAtE,KAAOJ,EACP0E,KAAA1C,QAAUJ,EACV8C,KAAArC,MAAQH,EACRwC,KAAAjC,UAAYH,EACZoC,KAAAzB,cAAgBH,EAChB4B,KAAAvF,MAAQZ,EACRmG,KAAAjF,OAASD,EACTkF,KAAA9E,gBAAkBF,EAClBgF,KAAA3E,mBAAqBF,SA/BpBsB,EAAAmC,UAAAqB,KAAA,SAAKnC,GACH,GAAI0B,EACF,OAAOxF,QAAQE,OAAO,qCAGxB,IAAK4D,IAAYA,EAAQoC,MACvB,MAAM,IAAIC,MAAM,6CAGlB,OAAKV,SAIE,IAAIzF,SAAc,SAACC,SACA,QAAxBG,EAAAC,OAAOC,yBAAiB,IAAAF,GAAAA,EAAEG,MAAK,SAACC,GAC9BA,EAAUyF,KAAKnC,GAASpD,MAAK,WAC3B8E,GAAyB,EACzBvF,aAPGD,QAAQE,OAAO,iJAvB3BkG,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,kECxiBZ,SAAAC,YAEAA,EAAA3B,UAAA4B,SAAA,sCAdDC,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,0BACVC,SAAU,sGCOZ,iCANCC,EAAAA,SAAQP,KAAA,CAAC,CACRQ,aAAc,CAACN,GACfO,QAAS,GAETC,QAAS,CAACR","sourcesContent":["type Action<T> = (item: T) => void;\ninterface AutoPromptOptions { force?: boolean; forceSlidedownOverNative?: boolean; slidedownPromptOptions?: IOneSignalAutoPromptOptions; }\ninterface IOneSignalAutoPromptOptions { force?: boolean; forceSlidedownOverNative?: boolean; isInUpdateMode?: boolean; categoryOptions?: IOneSignalCategories; }\ninterface IOneSignalCategories { positiveUpdateButton: string; negativeUpdateButton: string; savingButtonText: string; errorButtonText: string; updateMessage: string; tags: IOneSignalTagCategory[]; }\ninterface IOneSignalTagCategory { tag: string; label: string; checked?: boolean; }\ntype PushSubscriptionNamespaceProperties = { id: string | null | undefined; token: string | null | undefined; optedIn: boolean; };\ntype SubscriptionChangeEvent = { previous: PushSubscriptionNamespaceProperties; current: PushSubscriptionNamespaceProperties; };\ntype NotificationEventName = 'click' | 'willDisplay' | 'dismiss' | 'permissionChange' | 'permissionPromptDisplay';\ninterface NotificationButtonData { action?: string; title?: string; icon?: string; url?: string; }\ninterface StructuredNotification { id: string; content: string; heading?: string; url?: string; data?: object; rr?: string; icon?: string; image?: string; tag?: string; badge?: string; vibrate?: string; buttons?: NotificationButtonData[]; }\ntype SlidedownEventName = 'slidedownShown';\ntype OneSignalDeferredLoadedCallback = (onesignal: IOneSignalOneSignal) => void;\n\ninterface IInitObject {\n  appId: string;\n  subdomainName?: string;\n  requiresUserPrivacyConsent?: boolean;\n  promptOptions?: object;\n  welcomeNotification?: object;\n  notifyButton?: object;\n  persistNotification?: boolean;\n  webhooks?: object;\n  autoResubscribe?: boolean;\n  autoRegister?: boolean;\n  notificationClickHandlerMatch?: string;\n  notificationClickHandlerAction?: string;\n  serviceWorkerParam?: { scope: string };\n  serviceWorkerPath?: string;\n  serviceWorkerUpdaterPath?: string;\n  path?: string;\n  allowLocalhostAsSecureOrigin?: boolean;\n  [key: string]: any;\n}\n\ninterface IOneSignalOneSignal {\n\tSlidedown: IOneSignalSlidedown;\n\tNotifications: IOneSignalNotifications;\n\tSession: IOneSignalSession;\n\tUser: IOneSignalUser;\n\tDebug: IOneSignalDebug;\n\tlogin(externalId: string, jwtToken?: string): Promise<void>;\n\tlogout(): Promise<void>;\n\tinit(options: IInitObject): Promise<void>;\n\tsetConsentGiven(consent: boolean): Promise<void>;\n\tsetConsentRequired(requiresConsent: boolean): Promise<void>;\n}\ninterface IOneSignalNotifications {\n\tsetDefaultUrl(url: string): Promise<void>;\n\tsetDefaultTitle(title: string): Promise<void>;\n\tisPushSupported(): boolean;\n\tgetPermissionStatus(onComplete: Action<NotificationPermission>): Promise<NotificationPermission>;\n\trequestPermission(): Promise<void>;\n\taddEventListener(event: NotificationEventName, listener: (obj: any) => void): void;\n\tremoveEventListener(event: NotificationEventName, listener: (obj: any) => void): void;\n}\ninterface IOneSignalSlidedown {\n\tpromptPush(options?: AutoPromptOptions): Promise<void>;\n\tpromptPushCategories(options?: AutoPromptOptions): Promise<void>;\n\tpromptSms(options?: AutoPromptOptions): Promise<void>;\n\tpromptEmail(options?: AutoPromptOptions): Promise<void>;\n\tpromptSmsAndEmail(options?: AutoPromptOptions): Promise<void>;\n\taddEventListener(event: SlidedownEventName, listener: (wasShown: boolean) => void): void;\n\tremoveEventListener(event: SlidedownEventName, listener: (wasShown: boolean) => void): void;\n}\ninterface IOneSignalDebug {\n\tsetLogLevel(logLevel: string): void;\n}\ninterface IOneSignalSession {\n\tsendOutcome(outcomeName: string, outcomeWeight?: number): Promise<void>;\n\tsendUniqueOutcome(outcomeName: string): Promise<void>;\n}\ninterface IOneSignalUser {\n\tPushSubscription: IOneSignalPushSubscription;\n\taddAlias(label: string, id: string): void;\n\taddAliases(aliases: { [key: string]: string }): void;\n\tremoveAlias(label: string): void;\n\tremoveAliases(labels: string[]): void;\n\taddEmail(email: string): void;\n\tremoveEmail(email: string): void;\n\taddSms(smsNumber: string): void;\n\tremoveSms(smsNumber: string): void;\n}\ninterface IOneSignalPushSubscription {\n\tid: string | null | undefined;\n\ttoken: string | null | undefined;\n\toptedIn: boolean | undefined;\n\toptIn(): Promise<void>;\n\toptOut(): Promise<void>;\n\taddEventListener(event: 'subscriptionChange', listener: (change: SubscriptionChangeEvent) => void): void;\n\tremoveEventListener(event: 'subscriptionChange', listener: (change: SubscriptionChangeEvent) => void): void;\n}\n\nfunction oneSignalLogin(externalId: string, jwtToken?: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.login(externalId, jwtToken)\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction oneSignalLogout(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.logout()\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction oneSignalSetConsentGiven(consent: boolean): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.setConsentGiven(consent)\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction oneSignalSetConsentRequired(requiresConsent: boolean): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.setConsentRequired(requiresConsent)\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction slidedownPromptPush(options?: AutoPromptOptions): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Slidedown.promptPush(options)\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction slidedownPromptPushCategories(options?: AutoPromptOptions): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Slidedown.promptPushCategories(options)\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction slidedownPromptSms(options?: AutoPromptOptions): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Slidedown.promptSms(options)\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction slidedownPromptEmail(options?: AutoPromptOptions): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Slidedown.promptEmail(options)\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction slidedownPromptSmsAndEmail(options?: AutoPromptOptions): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Slidedown.promptSmsAndEmail(options)\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction slidedownAddEventListener(event: SlidedownEventName, listener: (wasShown: boolean) => void): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.Slidedown.addEventListener(event, listener);\n  });\n}\n\nfunction slidedownRemoveEventListener(event: SlidedownEventName, listener: (wasShown: boolean) => void): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.Slidedown.removeEventListener(event, listener);\n  });\n}\n\nfunction notificationsSetDefaultUrl(url: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Notifications.setDefaultUrl(url)\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction notificationsSetDefaultTitle(title: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Notifications.setDefaultTitle(title)\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction notificationsGetPermissionStatus(onComplete: Action<NotificationPermission>): Promise<NotificationPermission> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Notifications.getPermissionStatus(onComplete)\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction notificationsRequestPermission(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Notifications.requestPermission()\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction notificationsAddEventListener(event: 'click' | 'willDisplay' | 'dismiss', listener: (obj: StructuredNotification) => void): void;\nfunction notificationsAddEventListener(event: 'permissionChange', listener: (obj: { to: NotificationPermission }) => void): void;\nfunction notificationsAddEventListener(event: 'permissionPromptDisplay', listener: () => void): void;\n\nfunction notificationsAddEventListener(event: NotificationEventName, listener: (obj: any) => void): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.Notifications.addEventListener(event, listener);\n  });\n}\n\nfunction notificationsRemoveEventListener(event: 'click' | 'willDisplay' | 'dismiss', listener: (obj: StructuredNotification) => void): void;\nfunction notificationsRemoveEventListener(event: 'permissionChange', listener: (obj: { to: NotificationPermission }) => void): void;\nfunction notificationsRemoveEventListener(event: 'permissionPromptDisplay', listener: () => void): void;\n\nfunction notificationsRemoveEventListener(event: NotificationEventName, listener: (obj: any) => void): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.Notifications.removeEventListener(event, listener);\n  });\n}\n\nfunction sessionSendOutcome(outcomeName: string, outcomeWeight?: number): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Session.sendOutcome(outcomeName, outcomeWeight)\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction sessionSendUniqueOutcome(outcomeName: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Session.sendUniqueOutcome(outcomeName)\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction userAddAlias(label: string, id: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.addAlias(label, id);\n  });\n}\n\nfunction userAddAliases(aliases: { [key: string]: string }): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.addAliases(aliases);\n  });\n}\n\nfunction userRemoveAlias(label: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.removeAlias(label);\n  });\n}\n\nfunction userRemoveAliases(labels: string[]): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.removeAliases(labels);\n  });\n}\n\nfunction userAddEmail(email: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.addEmail(email);\n  });\n}\n\nfunction userRemoveEmail(email: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.removeEmail(email);\n  });\n}\n\nfunction userAddSms(smsNumber: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.addSms(smsNumber);\n  });\n}\n\nfunction userRemoveSms(smsNumber: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.removeSms(smsNumber);\n  });\n}\n\nfunction pushSubscriptionOptIn(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.User.PushSubscription.optIn()\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction pushSubscriptionOptOut(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject();\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.User.PushSubscription.optOut()\n        .then((value: any) => resolve(value))\n        .catch((error: Error) => reject(error));\n    });\n  });\n}\n\nfunction pushSubscriptionAddEventListener(event: 'subscriptionChange', listener: (change: SubscriptionChangeEvent) => void): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.PushSubscription.addEventListener(event, listener);\n  });\n}\n\nfunction pushSubscriptionRemoveEventListener(event: 'subscriptionChange', listener: (change: SubscriptionChangeEvent) => void): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.PushSubscription.removeEventListener(event, listener);\n  });\n}\n\nfunction debugSetLogLevel(logLevel: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.Debug.setLogLevel(logLevel);\n  });\n}\n\nconst PushSubscriptionNamespace: IOneSignalPushSubscription = {\n\tget id(): string | null | undefined { return window.OneSignal?.User?.PushSubscription?.id },\n\tget token(): string | null | undefined { return window.OneSignal?.User?.PushSubscription?.token },\n\tget optedIn(): boolean | undefined { return window.OneSignal?.User?.PushSubscription?.optedIn },\n\toptIn: pushSubscriptionOptIn,\n\toptOut: pushSubscriptionOptOut,\n\taddEventListener: pushSubscriptionAddEventListener,\n\tremoveEventListener: pushSubscriptionRemoveEventListener,\n};\n\nconst UserNamespace: IOneSignalUser = {\n\taddAlias: userAddAlias,\n\taddAliases: userAddAliases,\n\tremoveAlias: userRemoveAlias,\n\tremoveAliases: userRemoveAliases,\n\taddEmail: userAddEmail,\n\tremoveEmail: userRemoveEmail,\n\taddSms: userAddSms,\n\tremoveSms: userRemoveSms,\n\tPushSubscription: PushSubscriptionNamespace,\n};\n\nconst SessionNamespace: IOneSignalSession = {\n\tsendOutcome: sessionSendOutcome,\n\tsendUniqueOutcome: sessionSendUniqueOutcome,\n};\n\nconst DebugNamespace: IOneSignalDebug = {\n\tsetLogLevel: debugSetLogLevel,\n};\n\nconst SlidedownNamespace: IOneSignalSlidedown = {\n\tpromptPush: slidedownPromptPush,\n\tpromptPushCategories: slidedownPromptPushCategories,\n\tpromptSms: slidedownPromptSms,\n\tpromptEmail: slidedownPromptEmail,\n\tpromptSmsAndEmail: slidedownPromptSmsAndEmail,\n\taddEventListener: slidedownAddEventListener,\n\tremoveEventListener: slidedownRemoveEventListener,\n};\n\nconst NotificationsNamespace: IOneSignalNotifications = {\n\tsetDefaultUrl: notificationsSetDefaultUrl,\n\tsetDefaultTitle: notificationsSetDefaultTitle,\n\tisPushSupported,\n\tgetPermissionStatus: notificationsGetPermissionStatus,\n\trequestPermission: notificationsRequestPermission,\n\taddEventListener: notificationsAddEventListener,\n\tremoveEventListener: notificationsRemoveEventListener,\n};\n\n/**\n * @PublicApi\n */\nfunction isPushSupported(): boolean {\n  return isPushNotificationsSupported();\n}\n\nimport { Injectable } from '@angular/core';\nconst ONESIGNAL_SDK_ID = 'onesignal-sdk';\nconst ONE_SIGNAL_SCRIPT_SRC = 'https://cdn.onesignal.com/sdks/web/v16/OneSignalSDK.page.js';\n\n// true if the script is successfully loaded from CDN.\nlet isOneSignalInitialized = false;\n// true if the script fails to load from CDN. A separate flag is necessary\n// to disambiguate between a CDN load failure and a delayed call to\n// OneSignal#init.\nlet isOneSignalScriptFailed = false;\n\nwindow.OneSignalDeferred = window.OneSignalDeferred || [];\n\naddSDKScript();\n\n/**\n * The following code is copied directly from the native SDK source file BrowserSupportsPush.ts\n * S T A R T\n */\n\n// Checks if the browser supports push notifications by checking if specific\n//   classes and properties on them exist\nfunction isPushNotificationsSupported(): boolean {\n  return supportsVapidPush() || supportsSafariPush();\n}\n\nfunction isMacOSSafariInIframe(): boolean {\n  // Fallback detection for Safari on macOS in an iframe context\n  return window.top !== window && // isContextIframe\n  navigator.vendor === 'Apple Computer, Inc.' && // isSafari\n  navigator.platform === 'MacIntel'; // isMacOS\n}\n\nfunction supportsSafariPush(): boolean {\n  return (window.safari && typeof window.safari.pushNotification !== 'undefined') ||\n          isMacOSSafariInIframe();\n}\n\n// Does the browser support the standard Push API\nfunction supportsVapidPush(): boolean {\n  return typeof PushSubscriptionOptions !== 'undefined' &&\n        PushSubscriptionOptions.prototype.hasOwnProperty('applicationServerKey');\n}\n/* E N D */\n\nfunction handleOnError(): void {\n  isOneSignalScriptFailed = true;\n}\n\nfunction addSDKScript(): void {\n  const script = document.createElement('script');\n  script.id = ONESIGNAL_SDK_ID;\n  script.defer = true;\n  script.src = ONE_SIGNAL_SCRIPT_SRC;\n\n  // Always resolve whether or not the script is successfully initialized.\n  // This is important for users who may block cdn.onesignal.com w/ adblock.\n  script.onerror = () => {\n    handleOnError();\n  };\n\n  document.head.appendChild(script);\n}\n\n\ndeclare global {\n  interface Window {\n    OneSignalDeferred?: OneSignalDeferredLoadedCallback[];\n    OneSignal?: IOneSignalOneSignal;\n    safari?: {\n      pushNotification: any;\n    };\n  }\n}\n\ninterface IOneSignalOneSignal {\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OneSignal implements IOneSignalOneSignal {\n  [key: string]: any;\n\n  constructor() { }\n\n  /* P U B L I C */\n\n  /**\n   * @PublicApi\n   */\n  init(options: IInitObject): Promise<void> {\n    if (isOneSignalInitialized) {\n      return Promise.reject(`OneSignal is already initialized.`);\n    }\n\n    if (!options || !options.appId) {\n      throw new Error('You need to provide your OneSignal appId.');\n    }\n\n    if (!document) {\n      return Promise.reject(`Document is not defined.`);\n    }\n\n    return new Promise<void>((resolve) => {\n      window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n        oneSignal.init(options).then(() => {\n          isOneSignalInitialized = true;\n          resolve();\n        });\n      });\n    });\n  }\n\n\tUser = UserNamespace;\n\tSession = SessionNamespace;\n\tDebug = DebugNamespace;\n\tSlidedown = SlidedownNamespace;\n\tNotifications = NotificationsNamespace;\n\tlogin = oneSignalLogin;\n\tlogout = oneSignalLogout;\n\tsetConsentGiven = oneSignalSetConsentGiven;\n\tsetConsentRequired = oneSignalSetConsentRequired;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'onesignal-onesignal-ngx',\n  template: `\n    <p>\n      onesignal-ngx works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class OnesignalNgxComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { OnesignalNgxComponent } from './onesignal-ngx.component';\n\n\n\n@NgModule({\n  declarations: [OnesignalNgxComponent],\n  imports: [\n  ],\n  exports: [OnesignalNgxComponent]\n})\nexport class OnesignalNgxModule { }\n"]}