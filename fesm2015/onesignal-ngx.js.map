{"version":3,"file":"onesignal-ngx.js","sources":["../../../projects/onesignal-ngx/src/lib/onesignal-ngx.service.ts","../../../projects/onesignal-ngx/src/lib/onesignal-ngx.component.ts","../../../projects/onesignal-ngx/src/lib/onesignal-ngx.module.ts","../../../projects/onesignal-ngx/src/public-api.ts","../../../projects/onesignal-ngx/src/onesignal-ngx.ts"],"sourcesContent":["export interface AutoPromptOptions { force?: boolean; forceSlidedownOverNative?: boolean; slidedownPromptOptions?: IOneSignalAutoPromptOptions; }\nexport interface IOneSignalAutoPromptOptions { force?: boolean; forceSlidedownOverNative?: boolean; isInUpdateMode?: boolean; categoryOptions?: IOneSignalCategories; }\nexport interface IOneSignalCategories { positiveUpdateButton: string; negativeUpdateButton: string; savingButtonText: string; errorButtonText: string; updateMessage: string; tags: IOneSignalTagCategory[]; }\nexport interface IOneSignalTagCategory { tag: string; label: string; checked?: boolean; }\nexport type PushSubscriptionNamespaceProperties = { id: string | null | undefined; token: string | null | undefined; optedIn: boolean; };\nexport type SubscriptionChangeEvent = { previous: PushSubscriptionNamespaceProperties; current: PushSubscriptionNamespaceProperties; };\nexport type NotificationEventName = 'click' | 'foregroundWillDisplay' | 'dismiss' | 'permissionChange' | 'permissionPromptDisplay';\nexport type SlidedownEventName = 'slidedownAllowClick' | 'slidedownCancelClick' | 'slidedownClosed' | 'slidedownQueued' | 'slidedownShown';\nexport type OneSignalDeferredLoadedCallback = (onesignal: IOneSignalOneSignal) => void;\nexport interface IOSNotification {\n  /**\n   * The OneSignal notification id;\n   *  - Primary id on OneSignal's REST API and dashboard\n   */\n  readonly notificationId: string;\n\n  /**\n   * Visible title text on the notification\n   */\n  readonly title?: string;\n\n  /**\n   * Visible body text on the notification\n   */\n  readonly body: string;\n\n  /**\n   * Visible icon the notification; URL format\n   */\n  readonly icon?: string;\n\n  /**\n   * Visible small badgeIcon that displays on some devices; URL format\n   * Example: On Android's status bar\n   */\n  readonly badgeIcon?: string;\n\n  /**\n   * Visible image on the notification; URL format\n   */\n  readonly image?: string;\n\n  /**\n   * Visible buttons on the notification\n   */\n  readonly actionButtons?: IOSNotificationActionButton[];\n\n  /**\n   * If this value is the same as existing notification, it will replace it\n   * Can be set when creating the notification with \"Web Push Topic\" on the dashboard\n   * or web_push_topic from the REST API.\n   */\n  readonly topic?: string;\n\n  /**\n   * Custom object that was sent with the notification;\n   * definable when creating the notification from the OneSignal REST API or dashboard\n   */\n  readonly additionalData?: object;\n\n  /**\n   * URL to open when clicking or tapping on the notification\n   */\n  readonly launchURL?: string;\n\n  /**\n   * Confirm the push was received by reporting back to OneSignal\n   */\n  readonly confirmDelivery: boolean;\n}\n\nexport interface IOSNotificationActionButton {\n  /**\n   * Any unique identifier to represent which button was clicked. This is typically passed back to the service worker\n   * and host page through events to identify which button was clicked.\n   * e.g. 'like-button'\n   */\n  readonly actionId: string;\n  /**\n   * The notification action button's text.\n   */\n  readonly text: string;\n  /**\n   * A valid publicly reachable HTTPS URL to an image.\n   */\n  readonly icon?: string;\n  /**\n   * The URL to open the web browser to when this action button is clicked.\n   */\n  readonly launchURL?: string;\n}\n\nexport interface NotificationClickResult {\n  readonly actionId?: string;\n  readonly url?: string;\n}\n\nexport type NotificationEventTypeMap = {\n  'click': NotificationClickEvent;\n  'foregroundWillDisplay': NotificationForegroundWillDisplayEvent;\n  'dismiss': NotificationDismissEvent;\n  'permissionChange': boolean;\n  'permissionPromptDisplay': void;\n};\n\nexport interface NotificationForegroundWillDisplayEvent {\n  readonly notification: IOSNotification;\n  preventDefault(): void;\n}\n\nexport interface NotificationDismissEvent {\n  notification: IOSNotification;\n}\n\nexport interface NotificationClickEvent {\n  readonly notification: IOSNotification;\n  readonly result: NotificationClickResult;\n}\n\nexport type UserChangeEvent = {\n  current: UserNamespaceProperties;\n};\nexport type UserNamespaceProperties = {\n  onesignalId: string | undefined;\n  externalId: string | undefined;\n};\n\nexport interface IInitObject {\n  appId: string;\n  subdomainName?: string;\n  requiresUserPrivacyConsent?: boolean;\n  promptOptions?: {\n    slidedown: {\n      prompts: {\n        /**\n         * Whether to automatically display the prompt.\n         * `true` will display the prompt based on the delay options.\n         * `false` will prevent the prompt from displaying until the Slidedowns methods are used.\n         */\n        autoPrompt: boolean;\n\n        /**\n         * Only available for type: category. Up to 10 categories.\n         * @example\n         *  categories: [{ tag: 'local_news', label: 'Local News' }] // The user will be tagged with local_news but will see \"Local News\" in the prompt.\n         */\n        categories: {\n          /** Should identify the action. */\n          tag: string;\n\n          /** What the user will see. */\n          label: string;\n        }[];\n\n        /**\n         * The delay options for the prompt.\n         * @example delay: { pageViews: 3, timeDelay: 20 } // The user will not be shown the prompt until 20 seconds after the 3rd page view.\n         */\n        delay: {\n          /** The number of pages a user needs to visit before the prompt is displayed. */\n          pageViews?: number;\n\n          /** The number of seconds a user needs to wait before the prompt is displayed.Both options must be satisfied for the prompt to display */\n          timeDelay?: number;\n        };\n\n        /**\n         * The text to display in the prompt.\n         */\n        text?: {\n          /** The callout asking the user to opt-in. Up to 90 characters. */\n          actionMessage?: string;\n\n          /** Triggers the opt-in. Up to 15 characters. */\n          acceptButton?: string;\n\n          /** Cancels opt-in. Up to 15 characters. */\n          cancelMessage?: string;\n\n          /** The message of the confirmation prompt displayed after the email and/or phone number is provided. Up to 90 characters. */\n          confirmMessage?: string;\n\n          /** Identifies the email text field. Up to 15 characters. */\n          emailLabel?: string;\n\n          /** Cancels the category update. Up to 15 characters. */\n          negativeUpdateButton?: string;\n\n          /** Saves the updated category tags. Up to 15 characters. */\n          positiveUpdateButton?: string;\n\n          /** Identifies the phone number text field. Up to 15 characters. */\n          smsLabel?: string;\n\n          /** A different message shown to subscribers presented the prompt again to update categories. Up to 90 characters. */\n          updateMessage?: string;\n        };\n\n        /**\n         * The type of prompt to display.\n         * `push` which is the Slide Prompt without categories.\n         * `category` which is the Slide Prompt with categories.\n         * `sms` only asks for phone number.\n         * `email` only asks for email address.\n         * `smsAndEmail` asks for both phone number and email address.\n         */\n        type: 'push' | 'category' | 'sms' | 'email' | 'smsAndEmail';\n      }[];\n    };\n  };\n  welcomeNotification?: {\n    /**\n     * Disables sending a welcome notification to new site visitors. If you want to disable welcome notifications, this is the only option you need.\n     * @deprecated Use 'disable' instead. This will be removed in a future version.\n     */\n    disabled?: boolean;\n\n    /**\n     * Disables sending a welcome notification to new site visitors. If you want to disable welcome notifications, this is the only option you need.\n     */\n    disable?: boolean;\n\n    /**\n     * The welcome notification's message. You can localize this to your own language.\n     * If left blank or set to blank, the default of 'Thanks for subscribing!' will be used.\n     */\n    message: string;\n\n    /**\n     * The welcome notification's title. You can localize this to your own language. If not set, or left blank, the site's title will be used.\n     * Set to one space ' ' to clear the title, although this is not recommended.\n     */\n    title?: string;\n\n    /**\n     * By default, clicking the welcome notification does not open any link.\n     * This is recommended because the user has just visited your site and subscribed.\n     */\n    url?: string;\n  };\n\n  /**\n   * Will enable customization of the notify/subscription bell button.\n   */\n  notifyButton?: {\n    /**\n     * A function you define that returns true to show the Subscription Bell, or false to hide it.\n     * Typically used the hide the Subscription Bell after the user is subscribed.\n     * This function is not re-evaluated on every state change; this function is only evaluated once when the Subscription Bell begins to show.\n     */\n    displayPredicate?: () => boolean | Promise<boolean>;\n\n    /**\n     * Enable the Subscription Bell. The Subscription Bell is otherwise disabled by default.\n     */\n    enable?: boolean;\n\n    /** Specify CSS-valid pixel offsets using bottom, left, and right. */\n    offset?: { bottom: string; left: string; right: string };\n\n    /**\n     * If `true`, the Subscription Bell will display an icon that there is 1 unread message.\n     * When hovering over the Subscription Bell, the user will see custom text set by message.prenotify.\n     */\n    prenotify: boolean;\n\n    /** Either `bottom-left` or `bottom-right`. The Subscription Bell will be fixed at this location on your page. */\n    position?: 'bottom-left' | 'bottom-right';\n\n    /**  Set `false` to hide the 'Powered by OneSignal' text in the Subscription Bell dialog popup. */\n    showCredit: boolean;\n\n    /**\n     * The Subscription Bell will initially appear at one of these sizes, and then shrink down to size `small` after the user subscribes.\n     */\n    size?: 'small' | 'medium' | 'large';\n\n    /** Customize the Subscription Bell text. */\n    text: {\n      'dialog.blocked.message': string;\n      'dialog.blocked.title': string;\n      'dialog.main.button.subscribe': string;\n      'dialog.main.button.unsubscribe': string;\n      'dialog.main.title': string;\n      'message.action.resubscribed': string;\n      'message.action.subscribed': string;\n      'message.action.subscribing': string;\n      'message.action.unsubscribed': string;\n      'message.prenotify': string;\n      'tip.state.blocked': string;\n      'tip.state.subscribed': string;\n      'tip.state.unsubscribed': string;\n    };\n  };\n\n  persistNotification?: boolean;\n  webhooks?: {\n    /**\n     * Enable this setting only if your server has CORS enabled and supports non-simple CORS requests.\n     * If this setting is disabled, your webhook will not need CORS to receive data, but it will not receive the custom headers.\n     * The simplest option is to leave it disabled.\n     * @default false\n     */\n    cors: boolean;\n\n    /**\n     * This event occurs after a notification is clicked.\n     * @example https://site.com/hook\n     */\n    'notification.clicked'?: string;\n\n    /**\n     * This event occurs after a notification is intentionally dismissed by the user (clicking the notification body or one of the notification action buttons does not trigger the dismissed webhook),\n     * after a group of notifications are all dismissed (with this notification as part of that group), or after a notification expires on its own time and disappears. This event is supported on Chrome only.\n     * @example https://site.com/hook\n     */\n    'notification.dismissed'?: string;\n\n    /**\n     * This event occurs after a notification is displayed.\n     * @example https://site.com/hook\n     */\n    'notification.willDisplay'?: string;\n  };\n  autoResubscribe?: boolean;\n  autoRegister?: boolean;\n  notificationClickHandlerMatch?: string;\n  notificationClickHandlerAction?: string;\n  path?: string;\n  serviceWorkerParam?: { scope: string };\n  serviceWorkerPath?: string;\n  serviceWorkerOverrideForTypical?: boolean;\n  serviceWorkerUpdaterPath?: string;\n  allowLocalhostAsSecureOrigin?: boolean;\n  [key: string]: any;\n}\n\nexport interface IOneSignalOneSignal {\n\tSlidedown: IOneSignalSlidedown;\n\tNotifications: IOneSignalNotifications;\n\tSession: IOneSignalSession;\n\tUser: IOneSignalUser;\n\tDebug: IOneSignalDebug;\n\tlogin(externalId: string, jwtToken?: string): Promise<void>;\n\tlogout(): Promise<void>;\n\tinit(options: IInitObject): Promise<void>;\n\tsetConsentGiven(consent: boolean): Promise<void>;\n\tsetConsentRequired(requiresConsent: boolean): Promise<void>;\n}\nexport interface IOneSignalNotifications {\n\tpermissionNative: NotificationPermission;\n\tpermission: boolean;\n\tsetDefaultUrl(url: string): Promise<void>;\n\tsetDefaultTitle(title: string): Promise<void>;\n\tisPushSupported(): boolean;\n\trequestPermission(): Promise<void>;\n\taddEventListener<K extends NotificationEventName>(event: K, listener: (obj: NotificationEventTypeMap[K]) => void): void;\n\tremoveEventListener<K extends NotificationEventName>(event: K, listener: (obj: NotificationEventTypeMap[K]) => void): void;\n}\nexport interface IOneSignalSlidedown {\n\tpromptPush(options?: AutoPromptOptions): Promise<void>;\n\tpromptPushCategories(options?: AutoPromptOptions): Promise<void>;\n\tpromptSms(options?: AutoPromptOptions): Promise<void>;\n\tpromptEmail(options?: AutoPromptOptions): Promise<void>;\n\tpromptSmsAndEmail(options?: AutoPromptOptions): Promise<void>;\n\taddEventListener(event: SlidedownEventName, listener: (wasShown: boolean) => void): void;\n\tremoveEventListener(event: SlidedownEventName, listener: (wasShown: boolean) => void): void;\n}\nexport interface IOneSignalDebug {\n\tsetLogLevel(logLevel: 'trace' | 'debug' | 'info' | 'warn' | 'error'): void;\n}\nexport interface IOneSignalSession {\n\tsendOutcome(outcomeName: string, outcomeWeight?: number): Promise<void>;\n\tsendUniqueOutcome(outcomeName: string): Promise<void>;\n}\nexport interface IOneSignalUser {\n\tonesignalId: string | undefined;\n\texternalId: string | undefined;\n\tPushSubscription: IOneSignalPushSubscription;\n\taddAlias(label: string, id: string): void;\n\taddAliases(aliases: { [key: string]: string }): void;\n\tremoveAlias(label: string): void;\n\tremoveAliases(labels: string[]): void;\n\taddEmail(email: string): void;\n\tremoveEmail(email: string): void;\n\taddSms(smsNumber: string): void;\n\tremoveSms(smsNumber: string): void;\n\taddTag(key: string, value: string): void;\n\taddTags(tags: { [key: string]: string }): void;\n\tremoveTag(key: string): void;\n\tremoveTags(keys: string[]): void;\n\tgetTags(): { [key: string]: string };\n\taddEventListener(event: 'change', listener: (change: UserChangeEvent) => void): void;\n\tremoveEventListener(event: 'change', listener: (change: UserChangeEvent) => void): void;\n\tsetLanguage(language: string): void;\n\tgetLanguage(): string;\n}\nexport interface IOneSignalPushSubscription {\n\tid: string | null | undefined;\n\ttoken: string | null | undefined;\n\toptedIn: boolean | undefined;\n\toptIn(): Promise<void>;\n\toptOut(): Promise<void>;\n\taddEventListener(event: 'change', listener: (change: SubscriptionChangeEvent) => void): void;\n\tremoveEventListener(event: 'change', listener: (change: SubscriptionChangeEvent) => void): void;\n}\nfunction oneSignalLogin(externalId: string, jwtToken?: string): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.login(externalId, jwtToken).then(() => resolve());\n    });\n  });\n}\nfunction oneSignalLogout(): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.logout().then(() => resolve());\n    });\n  });\n}\nfunction oneSignalSetConsentGiven(consent: boolean): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.setConsentGiven(consent).then(() => resolve());\n    });\n  });\n}\nfunction oneSignalSetConsentRequired(requiresConsent: boolean): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.setConsentRequired(requiresConsent).then(() => resolve());\n    });\n  });\n}\nfunction slidedownPromptPush(options?: AutoPromptOptions): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Slidedown.promptPush(options).then(() => resolve());\n    });\n  });\n}\nfunction slidedownPromptPushCategories(options?: AutoPromptOptions): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Slidedown.promptPushCategories(options).then(() => resolve());\n    });\n  });\n}\nfunction slidedownPromptSms(options?: AutoPromptOptions): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Slidedown.promptSms(options).then(() => resolve());\n    });\n  });\n}\nfunction slidedownPromptEmail(options?: AutoPromptOptions): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Slidedown.promptEmail(options).then(() => resolve());\n    });\n  });\n}\nfunction slidedownPromptSmsAndEmail(options?: AutoPromptOptions): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Slidedown.promptSmsAndEmail(options).then(() => resolve());\n    });\n  });\n}\nfunction slidedownAddEventListener(event: SlidedownEventName, listener: (wasShown: boolean) => void): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.Slidedown.addEventListener(event, listener);\n  });\n}\n\nfunction slidedownRemoveEventListener(event: SlidedownEventName, listener: (wasShown: boolean) => void): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.Slidedown.removeEventListener(event, listener);\n  });\n}\n\nfunction notificationsSetDefaultUrl(url: string): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Notifications.setDefaultUrl(url).then(() => resolve());\n    });\n  });\n}\nfunction notificationsSetDefaultTitle(title: string): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Notifications.setDefaultTitle(title).then(() => resolve());\n    });\n  });\n}\nfunction notificationsRequestPermission(): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Notifications.requestPermission().then(() => resolve());\n    });\n  });\n}\nfunction notificationsAddEventListener<K extends NotificationEventName>(event: K, listener: (obj: NotificationEventTypeMap[K]) => void): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.Notifications.addEventListener(event, listener);\n  });\n}\n\nfunction notificationsRemoveEventListener<K extends NotificationEventName>(event: K, listener: (obj: NotificationEventTypeMap[K]) => void): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.Notifications.removeEventListener(event, listener);\n  });\n}\n\nfunction sessionSendOutcome(outcomeName: string, outcomeWeight?: number): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Session.sendOutcome(outcomeName, outcomeWeight).then(() => resolve());\n    });\n  });\n}\nfunction sessionSendUniqueOutcome(outcomeName: string): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.Session.sendUniqueOutcome(outcomeName).then(() => resolve());\n    });\n  });\n}\nfunction userAddAlias(label: string, id: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.addAlias(label, id);\n  });\n}\n\nfunction userAddAliases(aliases: { [key: string]: string }): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.addAliases(aliases);\n  });\n}\n\nfunction userRemoveAlias(label: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.removeAlias(label);\n  });\n}\n\nfunction userRemoveAliases(labels: string[]): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.removeAliases(labels);\n  });\n}\n\nfunction userAddEmail(email: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.addEmail(email);\n  });\n}\n\nfunction userRemoveEmail(email: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.removeEmail(email);\n  });\n}\n\nfunction userAddSms(smsNumber: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.addSms(smsNumber);\n  });\n}\n\nfunction userRemoveSms(smsNumber: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.removeSms(smsNumber);\n  });\n}\n\nfunction userAddTag(key: string, value: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.addTag(key, value);\n  });\n}\n\nfunction userAddTags(tags: { [key: string]: string }): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.addTags(tags);\n  });\n}\n\nfunction userRemoveTag(key: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.removeTag(key);\n  });\n}\n\nfunction userRemoveTags(keys: string[]): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.removeTags(keys);\n  });\n}\n\n// @ts-expect-error - return non-Promise type despite needing to await OneSignalDeferred\nasync function userGetTags(): { [key: string]: string } {\n  let retVal: { [key: string]: string };\n  await window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    retVal = oneSignal.User.getTags();\n  });\n  // @ts-ignore\n  return retVal;\n}\n\nfunction userAddEventListener(event: 'change', listener: (change: UserChangeEvent) => void): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.addEventListener(event, listener);\n  });\n}\n\nfunction userRemoveEventListener(event: 'change', listener: (change: UserChangeEvent) => void): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.removeEventListener(event, listener);\n  });\n}\n\nfunction userSetLanguage(language: string): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.setLanguage(language);\n  });\n}\n\n// @ts-expect-error - return non-Promise type despite needing to await OneSignalDeferred\nasync function userGetLanguage(): string {\n  let retVal: string;\n  await window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    retVal = oneSignal.User.getLanguage();\n  });\n  // @ts-ignore\n  return retVal;\n}\n\nfunction pushSubscriptionOptIn(): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.User.PushSubscription.optIn().then(() => resolve());\n    });\n  });\n}\nfunction pushSubscriptionOptOut(): Promise<void> {\n  \n  return new Promise((resolve, reject) => {\n    if (isOneSignalScriptFailed) {\n      reject(new Error('OneSignal script failed to load.'));\n      return;\n    }\n\n    window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n      oneSignal.User.PushSubscription.optOut().then(() => resolve());\n    });\n  });\n}\nfunction pushSubscriptionAddEventListener(event: 'change', listener: (change: SubscriptionChangeEvent) => void): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.PushSubscription.addEventListener(event, listener);\n  });\n}\n\nfunction pushSubscriptionRemoveEventListener(event: 'change', listener: (change: SubscriptionChangeEvent) => void): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.User.PushSubscription.removeEventListener(event, listener);\n  });\n}\n\nfunction debugSetLogLevel(logLevel: 'trace' | 'debug' | 'info' | 'warn' | 'error'): void {\n  window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n    oneSignal.Debug.setLogLevel(logLevel);\n  });\n}\n\n\nconst PushSubscriptionNamespace: IOneSignalPushSubscription = {\n\tget id(): string | null | undefined { return window.OneSignal?.User?.PushSubscription?.id; },\n\tget token(): string | null | undefined { return window.OneSignal?.User?.PushSubscription?.token; },\n\tget optedIn(): boolean | undefined { return window.OneSignal?.User?.PushSubscription?.optedIn; },\n\toptIn: pushSubscriptionOptIn,\n\toptOut: pushSubscriptionOptOut,\n\taddEventListener: pushSubscriptionAddEventListener,\n\tremoveEventListener: pushSubscriptionRemoveEventListener,\n};\n\nconst UserNamespace: IOneSignalUser = {\n\tget onesignalId(): string | undefined { return window.OneSignal?.User?.onesignalId; },\n\tget externalId(): string | undefined { return window.OneSignal?.User?.externalId; },\n\taddAlias: userAddAlias,\n\taddAliases: userAddAliases,\n\tremoveAlias: userRemoveAlias,\n\tremoveAliases: userRemoveAliases,\n\taddEmail: userAddEmail,\n\tremoveEmail: userRemoveEmail,\n\taddSms: userAddSms,\n\tremoveSms: userRemoveSms,\n\taddTag: userAddTag,\n\taddTags: userAddTags,\n\tremoveTag: userRemoveTag,\n\tremoveTags: userRemoveTags,\n\tgetTags: userGetTags,\n\taddEventListener: userAddEventListener,\n\tremoveEventListener: userRemoveEventListener,\n\tsetLanguage: userSetLanguage,\n\tgetLanguage: userGetLanguage,\n\tPushSubscription: PushSubscriptionNamespace,\n};\n\nconst SessionNamespace: IOneSignalSession = {\n\tsendOutcome: sessionSendOutcome,\n\tsendUniqueOutcome: sessionSendUniqueOutcome,\n};\n\nconst DebugNamespace: IOneSignalDebug = {\n\tsetLogLevel: debugSetLogLevel,\n};\n\nconst SlidedownNamespace: IOneSignalSlidedown = {\n\tpromptPush: slidedownPromptPush,\n\tpromptPushCategories: slidedownPromptPushCategories,\n\tpromptSms: slidedownPromptSms,\n\tpromptEmail: slidedownPromptEmail,\n\tpromptSmsAndEmail: slidedownPromptSmsAndEmail,\n\taddEventListener: slidedownAddEventListener,\n\tremoveEventListener: slidedownRemoveEventListener,\n};\n\nconst NotificationsNamespace: IOneSignalNotifications = {\n\tget permissionNative(): NotificationPermission { return window.OneSignal?.Notifications?.permissionNative ?? 'default'; },\n\tget permission(): boolean { return window.OneSignal?.Notifications?.permission ?? false; },\n\tsetDefaultUrl: notificationsSetDefaultUrl,\n\tsetDefaultTitle: notificationsSetDefaultTitle,\n\tisPushSupported,\n\trequestPermission: notificationsRequestPermission,\n\taddEventListener: notificationsAddEventListener,\n\tremoveEventListener: notificationsRemoveEventListener,\n};\n\n/**\n * @PublicApi\n */\nfunction isPushSupported(): boolean {\n  return isPushNotificationsSupported();\n}\n\nimport { Injectable } from '@angular/core';\nconst ONESIGNAL_SDK_ID = 'onesignal-sdk';\nconst ONE_SIGNAL_SCRIPT_SRC =\n  'https://cdn.onesignal.com/sdks/web/v16/OneSignalSDK.page.js';\n\n// true if the script is successfully loaded from CDN.\nlet isOneSignalInitialized = false;\n// true if the script fails to load from CDN. A separate flag is necessary\n// to disambiguate between a CDN load failure and a delayed call to\n// OneSignal#init.\nlet isOneSignalScriptFailed = false;\n\nif (typeof window !== 'undefined') {\n  window.OneSignalDeferred = window.OneSignalDeferred || [];\n  addSDKScript();\n}\n\n/**\n * The following code is copied directly from the native SDK source file BrowserSupportsPush.ts\n * S T A R T\n */\n\n// Checks if the browser supports push notifications by checking if specific\n//   classes and properties on them exist\nfunction isPushNotificationsSupported(): boolean {\n  return supportsVapidPush() || supportsSafariPush();\n}\n\nfunction isMacOSSafariInIframe(): boolean {\n  // Fallback detection for Safari on macOS in an iframe context\n  return (\n    window.top !== window && // isContextIframe\n    navigator.vendor === 'Apple Computer, Inc.' && // isSafari\n    navigator.platform === 'MacIntel'\n  ); // isMacOS\n}\n\nfunction supportsSafariPush(): boolean {\n  return (\n    (window.safari && typeof window.safari.pushNotification !== 'undefined') ||\n    isMacOSSafariInIframe()\n  );\n}\n\n// Does the browser support the standard Push API\nfunction supportsVapidPush(): boolean {\n  return (\n    typeof PushSubscriptionOptions !== 'undefined' &&\n    PushSubscriptionOptions.prototype.hasOwnProperty('applicationServerKey')\n  );\n}\n/* E N D */\n\nfunction handleOnError(): void {\n  isOneSignalScriptFailed = true;\n}\n\nfunction addSDKScript(): void {\n  const script = document.createElement('script');\n  script.id = ONESIGNAL_SDK_ID;\n  script.defer = true;\n  script.src = ONE_SIGNAL_SCRIPT_SRC;\n\n  // Always resolve whether or not the script is successfully initialized.\n  // This is important for users who may block cdn.onesignal.com w/ adblock.\n  script.onerror = () => {\n    handleOnError();\n  };\n\n  document.head.appendChild(script);\n}\n\ndeclare global {\n  interface Window {\n    OneSignalDeferred?: OneSignalDeferredLoadedCallback[];\n    OneSignal?: IOneSignalOneSignal;\n    safari?: {\n      pushNotification: any;\n    };\n  }\n}\n\nexport interface IOneSignalOneSignal {\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OneSignal implements IOneSignalOneSignal {\n  [key: string]: any;\n\n  constructor() {}\n\n  /* P U B L I C */\n\n  /**\n   * @PublicApi\n   */\n  init(options: IInitObject): Promise<void> {\n    if (isOneSignalInitialized) {\n      return Promise.reject(`OneSignal is already initialized.`);\n    }\n\n    if (!options || !options.appId) {\n      return Promise.reject('You need to provide your OneSignal appId.');\n    }\n\n    if (!document) {\n      return Promise.reject(`Document is not defined.`);\n    }\n\n    // Handle both disabled and disable keys for welcome notification\n    if (options.welcomeNotification?.disabled !== undefined) {\n      options.welcomeNotification.disable = options.welcomeNotification.disabled;\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      window.OneSignalDeferred?.push((oneSignal: IOneSignalOneSignal) => {\n        oneSignal\n          .init(options)\n          .then(() => {\n            isOneSignalInitialized = true;\n            resolve();\n          })\n          .catch(reject);\n      });\n    });\n  }\n\n\tUser = UserNamespace;\n\tSession = SessionNamespace;\n\tDebug = DebugNamespace;\n\tSlidedown = SlidedownNamespace;\n\tNotifications = NotificationsNamespace;\n\tlogin = oneSignalLogin;\n\tlogout = oneSignalLogout;\n\tsetConsentGiven = oneSignalSetConsentGiven;\n\tsetConsentRequired = oneSignalSetConsentRequired;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'onesignal-onesignal-ngx',\n  template: `\n    <p>\n      onesignal-ngx works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class OnesignalNgxComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { OnesignalNgxComponent } from './onesignal-ngx.component';\n\n\n\n@NgModule({\n  declarations: [OnesignalNgxComponent],\n  imports: [\n  ],\n  exports: [OnesignalNgxComponent]\n})\nexport class OnesignalNgxModule { }\n","/*\n * Public API Surface of onesignal-ngx\n */\n\nexport * from './lib/onesignal-ngx.service';\nexport * from './lib/onesignal-ngx.component';\nexport * from './lib/onesignal-ngx.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}